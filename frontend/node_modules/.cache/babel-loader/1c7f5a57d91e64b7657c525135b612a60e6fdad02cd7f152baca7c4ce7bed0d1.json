{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for your Flask backend\nconst API_URL = 'http://localhost:5000';\n\n// ---------------- API FUNCTIONS ----------------\nasync function sendChatMessage(message) {\n  try {\n    const response = await axios.post(`${API_URL}/api/symptom-chatbot`, {\n      message\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error communicating with chatbot:', error);\n    throw error;\n  }\n}\nasync function getPatients() {\n  try {\n    const response = await axios.get(`${API_URL}/patients`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching patients:', error);\n    throw error;\n  }\n}\nasync function addPatient(patientData) {\n  try {\n    const response = await axios.post(`${API_URL}/patients`, patientData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding patient:', error);\n    throw error;\n  }\n}\nasync function getDoctors() {\n  try {\n    const response = await axios.get(`${API_URL}/doctors`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching doctors:', error);\n    throw error;\n  }\n}\nasync function addDoctor(doctorData) {\n  try {\n    const response = await axios.post(`${API_URL}/doctors`, doctorData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding doctor:', error);\n    throw error;\n  }\n}\nasync function getAppointments() {\n  try {\n    const response = await axios.get(`${API_URL}/appointments`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n}\nasync function addAppointment(appointmentData) {\n  try {\n    const response = await axios.post(`${API_URL}/appointments`, appointmentData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding appointment:', error);\n    throw error;\n  }\n}\nasync function getMedications() {\n  try {\n    const response = await axios.get(`${API_URL}/medications`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching medications:', error);\n    throw error;\n  }\n}\nasync function addMedication(medicationData) {\n  try {\n    const response = await axios.post(`${API_URL}/medications`, medicationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding medication:', error);\n    throw error;\n  }\n}\nasync function getMedicineInfo() {\n  try {\n    const response = await axios.get(`${API_URL}/medicine_info`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching medicine info:', error);\n    throw error;\n  }\n}\nasync function addMedicineInfo(medicineInfoData) {\n  try {\n    const response = await axios.post(`${API_URL}/medicine_info`, medicineInfoData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding medicine info:', error);\n    throw error;\n  }\n}\n\n// ---------------- EXPORT AS DEFAULT ----------------\nconst App = {\n  sendChatMessage,\n  getPatients,\n  addPatient,\n  getDoctors,\n  addDoctor,\n  getAppointments,\n  addAppointment,\n  getMedications,\n  addMedication,\n  getMedicineInfo,\n  addMedicineInfo\n};\nexport default App;","map":{"version":3,"names":["axios","API_URL","sendChatMessage","message","response","post","data","error","console","getPatients","get","addPatient","patientData","getDoctors","addDoctor","doctorData","getAppointments","addAppointment","appointmentData","getMedications","addMedication","medicationData","getMedicineInfo","addMedicineInfo","medicineInfoData","App"],"sources":["C:/Users/srija/OneDrive/Documents/GitHub/Mediflow/frontend/src/App.js"],"sourcesContent":["import axios from 'axios';\n\n// Base URL for your Flask backend\nconst API_URL = 'http://localhost:5000';\n\n// ---------------- API FUNCTIONS ----------------\nasync function sendChatMessage(message) {\n  try {\n    const response = await axios.post(`${API_URL}/api/symptom-chatbot`, { message });\n    return response.data;\n  } catch (error) {\n    console.error('Error communicating with chatbot:', error);\n    throw error;\n  }\n}\n\nasync function getPatients() {\n  try {\n    const response = await axios.get(`${API_URL}/patients`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching patients:', error);\n    throw error;\n  }\n}\n\nasync function addPatient(patientData) {\n  try {\n    const response = await axios.post(`${API_URL}/patients`, patientData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding patient:', error);\n    throw error;\n  }\n}\n\nasync function getDoctors() {\n  try {\n    const response = await axios.get(`${API_URL}/doctors`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching doctors:', error);\n    throw error;\n  }\n}\n\nasync function addDoctor(doctorData) {\n  try {\n    const response = await axios.post(`${API_URL}/doctors`, doctorData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding doctor:', error);\n    throw error;\n  }\n}\n\nasync function getAppointments() {\n  try {\n    const response = await axios.get(`${API_URL}/appointments`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n}\n\nasync function addAppointment(appointmentData) {\n  try {\n    const response = await axios.post(`${API_URL}/appointments`, appointmentData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding appointment:', error);\n    throw error;\n  }\n}\n\nasync function getMedications() {\n  try {\n    const response = await axios.get(`${API_URL}/medications`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching medications:', error);\n    throw error;\n  }\n}\n\nasync function addMedication(medicationData) {\n  try {\n    const response = await axios.post(`${API_URL}/medications`, medicationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding medication:', error);\n    throw error;\n  }\n}\n\nasync function getMedicineInfo() {\n  try {\n    const response = await axios.get(`${API_URL}/medicine_info`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching medicine info:', error);\n    throw error;\n  }\n}\n\nasync function addMedicineInfo(medicineInfoData) {\n  try {\n    const response = await axios.post(`${API_URL}/medicine_info`, medicineInfoData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding medicine info:', error);\n    throw error;\n  }\n}\n\n// ---------------- EXPORT AS DEFAULT ----------------\nconst App = {\n  sendChatMessage,\n  getPatients,\n  addPatient,\n  getDoctors,\n  addDoctor,\n  getAppointments,\n  addAppointment,\n  getMedications,\n  addMedication,\n  getMedicineInfo,\n  addMedicineInfo\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}