{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srija\\\\OneDrive\\\\Documents\\\\GitHub\\\\Mediflow\\\\frontend\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n_c = Form;\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 15px;\n  border-radius: 8px;\n  border: 1.5px solid #ccc;\n  &:focus {\n    border-color: #764ba2;\n    outline: none;\n  }\n`;\n_c2 = Input;\nconst Button = styled.button`\n  padding: 12px;\n  background: #764ba2;\n  color: white;\n  font-weight: 700;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  &:hover {\n    background: #6a11cb;\n  }\n`;\n_c3 = Button;\nconst Error = styled.span`\n  color: red;\n  font-size: 0.9rem;\n  margin-bottom: 10px;\n`;\n_c4 = Error;\nexport default function LoginForm({\n  onLogin\n}) {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => {\n    const storedUser = localStorage.getItem(data.email);\n    if (!storedUser) {\n      alert(\"User not found. Please sign up.\");\n      return;\n    }\n    const user = JSON.parse(storedUser);\n    if (user.password !== data.password) {\n      alert(\"Incorrect password!\");\n      return;\n    }\n    onLogin(user.name);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"email\",\n      placeholder: \"Email\",\n      ...register(\"email\", {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(Error, {\n      children: \"Email is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      ...register(\"password\", {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(Error, {\n      children: \"Password is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c5 = LoginForm;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Error\");\n$RefreshReg$(_c5, \"LoginForm\");","map":{"version":3,"names":["React","useForm","styled","jsxDEV","_jsxDEV","Form","form","_c","Input","input","_c2","Button","button","_c3","Error","span","_c4","LoginForm","onLogin","_s","register","handleSubmit","formState","errors","onSubmit","data","storedUser","localStorage","getItem","email","alert","user","JSON","parse","password","name","children","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["C:/Users/srija/OneDrive/Documents/GitHub/Mediflow/frontend/src/components/LoginForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border-radius: 8px;\r\n  border: 1.5px solid #ccc;\r\n  &:focus {\r\n    border-color: #764ba2;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px;\r\n  background: #764ba2;\r\n  color: white;\r\n  font-weight: 700;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #6a11cb;\r\n  }\r\n`;\r\n\r\nconst Error = styled.span`\r\n  color: red;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default function LoginForm({ onLogin }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const storedUser = localStorage.getItem(data.email);\r\n    if (!storedUser) {\r\n      alert(\"User not found. Please sign up.\");\r\n      return;\r\n    }\r\n    const user = JSON.parse(storedUser);\r\n    if (user.password !== data.password) {\r\n      alert(\"Incorrect password!\");\r\n      return;\r\n    }\r\n    onLogin(user.name);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      <Input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        {...register(\"email\", { required: true })}\r\n      />\r\n      {errors.email && <Error>Email is required</Error>}\r\n\r\n      <Input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        {...register(\"password\", { required: true })}\r\n      />\r\n      {errors.password && <Error>Password is required</Error>}\r\n\r\n      <Button type=\"submit\">Login</Button>\r\n    </Form>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}