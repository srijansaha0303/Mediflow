{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srija\\\\OneDrive\\\\Documents\\\\GitHub\\\\Mediflow\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pillAlerts, setPillAlerts] = useState([]);\n  const [queueStatus, setQueueStatus] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:5000/api/pills').then(res => res.json()).then(data => setPillAlerts(data.alerts));\n    fetch('http://localhost:5000/api/queue').then(res => res.json()).then(data => setQueueStatus(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mediflow Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pill Alerts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pillAlerts.map((alert, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [alert.time, \" - \", alert.medication]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Queue Status:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Queue Length: \", queueStatus.queue_length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Next Patient: \", queueStatus.next_patient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oPmojhwnd378CQlZaJnAfutJlTU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","pillAlerts","setPillAlerts","queueStatus","setQueueStatus","fetch","then","res","json","data","alerts","children","fileName","_jsxFileName","lineNumber","columnNumber","map","alert","idx","time","medication","queue_length","next_patient","_c","$RefreshReg$"],"sources":["C:/Users/srija/OneDrive/Documents/GitHub/Mediflow/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [pillAlerts, setPillAlerts] = useState([]);\n  const [queueStatus, setQueueStatus] = useState({});\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/pills')\n      .then(res => res.json())\n      .then(data => setPillAlerts(data.alerts));\n\n    fetch('http://localhost:5000/api/queue')\n      .then(res => res.json())\n      .then(data => setQueueStatus(data));\n  }, []);\n\n  return (\n    <div>\n      <h1>Mediflow Dashboard</h1>\n      <h2>Pill Alerts:</h2>\n      <ul>\n        {pillAlerts.map((alert, idx) => (\n          <li key={idx}>{alert.time} - {alert.medication}</li>\n        ))}\n      </ul>\n      <h2>Queue Status:</h2>\n      <p>Queue Length: {queueStatus.queue_length}</p>\n      <p>Next Patient: {queueStatus.next_patient}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIP,aAAa,CAACO,IAAI,CAACC,MAAM,CAAC,CAAC;IAE3CL,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,cAAc,CAACK,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjB,OAAA;MAAAa,QAAA,EACGV,UAAU,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACzBpB,OAAA;QAAAa,QAAA,GAAeM,KAAK,CAACE,IAAI,EAAC,KAAG,EAACF,KAAK,CAACG,UAAU;MAAA,GAArCF,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLjB,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAAa,QAAA,GAAG,gBAAc,EAACR,WAAW,CAACkB,YAAY;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CjB,OAAA;MAAAa,QAAA,GAAG,gBAAc,EAACR,WAAW,CAACmB,YAAY;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACf,EAAA,CA5BQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}