{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srija\\\\OneDrive\\\\Documents\\\\GitHub\\\\Mediflow\\\\frontend\\\\src\\\\components\\\\MedicinePricePanel.js\",\n  _s = $RefreshSig$();\n// src/components/MedicinePricePanel.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './MedicinePricePanel.css'; // Optional: for custom styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicinePricePanel = () => {\n  _s();\n  const [medicineName, setMedicineName] = useState('');\n  const [medicineData, setMedicineData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSearch = async () => {\n    if (!medicineName) {\n      setError('Please enter a medicine name.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.get(`/api/getMedicineData?name=${medicineName}`);\n      setMedicineData(response.data);\n    } catch (err) {\n      setError('Failed to fetch data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"medicine-price-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medicine Price Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: medicineName,\n      onChange: e => setMedicineName(e.target.value),\n      placeholder: \"Enter medicine name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      disabled: loading,\n      children: loading ? 'Searching...' : 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), medicineData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"medicine-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Brand: \", medicineData.brand.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \\u20B9\", medicineData.brand.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Generic Alternatives:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: medicineData.generics.map((generic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: generic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), \" - \\u20B9\", generic.price, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleContactStore(generic.storeId),\n            children: \"Contact Store\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicinePricePanel, \"D0I/QZRK5ME8kkhi3JbnRETggVw=\");\n_c = MedicinePricePanel;\nconst handleContactStore = storeId => {\n  alert(`Contacting store with ID: ${storeId}`);\n};\nexport default MedicinePricePanel;\nvar _c;\n$RefreshReg$(_c, \"MedicinePricePanel\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MedicinePricePanel","_s","medicineName","setMedicineName","medicineData","setMedicineData","loading","setLoading","error","setError","handleSearch","response","get","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","brand","name","price","generics","map","generic","index","handleContactStore","storeId","_c","alert","$RefreshReg$"],"sources":["C:/Users/srija/OneDrive/Documents/GitHub/Mediflow/frontend/src/components/MedicinePricePanel.js"],"sourcesContent":["// src/components/MedicinePricePanel.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './MedicinePricePanel.css'; // Optional: for custom styling\r\n\r\nconst MedicinePricePanel = () => {\r\n  const [medicineName, setMedicineName] = useState('');\r\n  const [medicineData, setMedicineData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSearch = async () => {\r\n    if (!medicineName) {\r\n      setError('Please enter a medicine name.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.get(`/api/getMedicineData?name=${medicineName}`);\r\n      setMedicineData(response.data);\r\n    } catch (err) {\r\n      setError('Failed to fetch data. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"medicine-price-panel\">\r\n      <h2>Medicine Price Comparison</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={medicineName}\r\n        onChange={(e) => setMedicineName(e.target.value)}\r\n        placeholder=\"Enter medicine name\"\r\n      />\r\n      <button onClick={handleSearch} disabled={loading}>\r\n        {loading ? 'Searching...' : 'Search'}\r\n      </button>\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {medicineData && (\r\n        <div className=\"medicine-details\">\r\n          <h3>Brand: {medicineData.brand.name}</h3>\r\n          <p>Price: ₹{medicineData.brand.price}</p>\r\n          <h4>Generic Alternatives:</h4>\r\n          <ul>\r\n            {medicineData.generics.map((generic, index) => (\r\n              <li key={index}>\r\n                <strong>{generic.name}</strong> - ₹{generic.price}\r\n                <button onClick={() => handleContactStore(generic.storeId)}>\r\n                  Contact Store\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst handleContactStore = (storeId) => {\r\n  alert(`Contacting store with ID: ${storeId}`);\r\n};\r\n\r\nexport default MedicinePricePanel;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}